@model OnlineFoodOrdering.Models.ViewModels.OrderDetailsViewModel
@using OnlineFoodOrdering.Utility
@inject Microsoft.AspNetCore.Mvc.Localization.IViewLocalizer localizer
<!-- Checkout Area Start Here -->
<div class="container">
    <form method="post" asp-action="OrderPickup" asp-controller="Order" asp-route-orderId="@Model.Order.Id">
        <div class="row">
            <div class="col-md-6">
                <div class="your-order1">
                    <div class="form-group">
                        <label>@localizer["Full Name"]</label>
                        <input asp-for="@Model.Order.PickupName" disabled class="form-control rounded-0" type="text">
                    </div>

                    <div class="form-group">
                        <label>@localizer["Phone Number"]</label>
                        <input asp-for="@Model.Order.PhoneNumber" disabled class="form-control rounded-0" type="text">
                    </div>

                    <div class="form-group">
                        <label>@localizer["Date and Time"]</label>
                        <input value="@Model.Order.PickUpDate.ToShortDateString()   @Model.Order.PickUpTime.ToShortTimeString()" class="form-control rounded-0" disabled type="text">
                    </div>


                    <div class="form-group">
                        <label>@localizer["Order Notes"]</label>
                        <textarea id="checkout-mess" cols="60" rows="5" disabled class="form-control rounded-0"></textarea>
                    </div>
                </div>

            </div>
            <div class="col-lg-6 col-12">
                <div class="your-order">
                    <h3>Order Nr.  @Model.Order.Id</h3>
                    <div class="your-order-table table-responsive">
                        <table class="table">
                            <thead>
                                <tr>
                                    <th class="cart-product-name">@localizer["Product"]</th>
                                    <th class="cart-product-total">@localizer["Total"]</th>
                                </tr>
                            </thead>
                            <tbody>

                                @foreach (var item in Model.OrderDetails)
                                {

                                    <tr class="cart_item">

                                        <td class="cart-product-name">
                                            @item.Name<strong class="product-quantity">
                                                × @item.Count
                                            </strong>
                                        </td>
                                        <td class="cart-product-total text-center"><span class="amount">@(item.Price*item.Count) €</span></td>

                                    </tr>

                                }


                            </tbody>
                            <tfoot>
                                <tr class="cart-subtotal">
                                    <th>@localizer["Order Subtotal"]</th>
                                    <td class="text-center"><span class="amount">@Model.Order.OrderTotalOriginal €</span></td>
                                </tr>
                                <tr class="cart-subtotal">
                                    <th>@localizer["Discount"]</th>
                                    <td class="text-center"><span class="amount">- @(Model.Order.OrderTotalOriginal-Model.Order.OrderTotal) €</span></td>
                                </tr>
                                <tr class="order-total">
                                    <th>@localizer["Order Total"]</th>
                                    <td class="text-center"><strong><span class="amount">@Model.Order.OrderTotal €</span></strong></td>
                                </tr>
                            </tfoot>
                        </table>
                    </div>

                </div>
                <div>


                    @if (Model.Order.Status.Equals(SD.StatusReady) && (User.IsInRole(SD.ManagerUser) || User.IsInRole(SD.FrontDeskUser)))
                    {
                        <button type="submit" class="btn btn-block btn-success btn-flat"><i class="fa fa-thumbs-up"></i>&nbsp; @localizer["Confirm Pickup"]</button>
                    }
                    else if (Model.Order.Status.Equals(SD.StatusCancelled))
                    {
                        <button type="submit" class="btn btn-block btn-danger btn-flat" disabled><i class="fas fa-ban"></i>&nbsp; @Model.Order.Status</button>
                    }
                    else if (Model.Order.Status.Equals(SD.StatusInProcess))
                    {
                        <button type="submit" class="btn btn-block btn-primary btn-flat" disabled><i class="fas fa-spinner"></i>&nbsp; @Model.Order.Status</button>
                    }
                    else
                    {
                        <button type="submit" class="btn btn-block btn-success btn-flat" disabled><i class="fas fa-thumbs-up"></i> &nbsp;@Model.Order.Status</button>
                    }

                </div>
            </div>
        </div>
    </form>
</div>
