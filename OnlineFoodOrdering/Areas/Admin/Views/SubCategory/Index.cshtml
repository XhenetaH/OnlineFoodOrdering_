@model IEnumerable<OnlineFoodOrdering.Models.SubCategory>
@using X.PagedList.Mvc.Core;
@using X.PagedList;
@inject Microsoft.AspNetCore.Mvc.Localization.IViewLocalizer localizer

@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="container">
    <div class="">
        <br />
        <br />
        <div class="row">
            <div class="col-2">
                <button type="button" data-toggle="modal" style="margin-bottom:40px; " class="obrien-button primary-btn anchorDetail3"><i class="fa fa-plus"></i> @localizer[" Create New"]</button>
            </div>

            <div class="col-12">
                <input type="text" id="Search" placeholder="@localizer["Search"]" class="form-control" style="border-radius:15px;" />
            </div>

        </div>
        <br />
        <div class="myaccount-table table-responsive text-center">
            @if (Model.Count() > 0)
            {
                <table class="table table-bordered">
                    <thead class="thead-light">
                        <tr>
                            <th>
                                @localizer["Name"]
                            </th>
                            <th>
                                @localizer["Category Name"]
                            </th>
                            <th></th>

                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model)
                        {
                            <tr class="Search">
                                <td>
                                    @Html.DisplayFor(modelItem => item.Name)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Category.Name)
                                </td>
                                @*<td style="max-width:100px;"><partial name="_TableButtonPartial" model="item.Id" /></td>*@

                                <td>
                                    <button style="margin-left:-20px;" type="button" class="anchorDetail" data-toggle="modal" data-id="@item.Id" title="Quick View">
                                        <i class="ion-edit"></i>
                                    </button>&nbsp;
                                    |&nbsp;
                                    <button type="button" class="anchorDetail1" data-toggle="modal" data-id="@item.Id" title="Quick View">
                                        <i class="ion-information-circled"></i>
                                    </button>&nbsp;
                                    |&nbsp;
                                    <button style="margin-right:-20px;" type="button" class="anchorDetail2" data-toggle="modal" data-id="@item.Id" title="Quick View">
                                        <i class="ion-android-delete"></i>
                                    </button>
                                </td>
                            </tr>

                        }
                    </tbody>
                </table>
                @Html.PagedListPager((IPagedList)Model, page => Url.Action("Index", new { page = page }),
    new X.PagedList.Mvc.Core.Common.PagedListRenderOptions
    {
        DisplayItemSliceAndTotal = false,
        ContainerDivClasses = new[] { "pagination pagination-wrap mb-10 mb-sm-0" },
        LiElementClasses = new[] { "pagination" },
        PageClasses = new[] { "page-link" },
        Display = X.PagedList.Web.Common.PagedListDisplayMode.IfNeeded

         });

            }
        </div>
    </div>

</div>
<!-- Modal Area Start Here -->
<div class="modal fade obrien-modal" id="myModal" tabindex="-1" role="dialog" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
            <button type="button" class="close close-button" data-dismiss="modal" aria-label="Close">
                <span class="close-icon" aria-hidden="true">x</span>
            </button>
            <div class="modal-body" id="myModalContent">

            </div>
        </div>
    </div>
</div>
<!-- Modal Area End Here -->
<!-- Modal Area Start Here -->
<div class="modal fade obrien-modal" id="myModal1" tabindex="-1" role="dialog" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
            <button type="button" class="close close-button" data-dismiss="modal" aria-label="Close">
                <span class="close-icon" aria-hidden="true">x</span>
            </button>
            <div class="modal-body" id="myModalContent1">

            </div>
        </div>
    </div>
</div>
<!-- Modal Area End Here -->
<!-- Modal Area Start Here -->
<div class="modal fade obrien-modal" id="myModal2" tabindex="-1" role="dialog" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
            <button type="button" class="close close-button" data-dismiss="modal" aria-label="Close">
                <span class="close-icon" aria-hidden="true">x</span>
            </button>
            <div class="modal-body" id="myModalContent2">

            </div>
        </div>
    </div>
</div>
<!-- Modal Area End Here -->
<!-- Modal Area Start Here -->
<div class="modal fade obrien-modal" id="myModal3" tabindex="-1" role="dialog" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
            <button type="button" class="close close-button" data-dismiss="modal" aria-label="Close">
                <span class="close-icon" aria-hidden="true">x</span>
            </button>
            <div class="modal-body" id="myModalContent3">

            </div>
        </div>
    </div>
</div>
<!-- Modal Area End Here -->

@section Scripts
{
    <script>
        var PostBackURL = '/Admin/SubCategory/Edit';
        var DetailsURL = '/Admin/SubCategory/Details';
        var DeleteURL = '/Admin/SubCategory/Delete';
        var CreateURL = '/Admin/SubCategory/Create';
        $(function () {
            $(".anchorDetail").click(function () {
                var $buttonClicked = $(this);
                var id = $buttonClicked.attr('data-id');
                $.ajax({
                    type: "GET",
                    url: PostBackURL,
                    contentType: "text/html; charset=utf-8",
                    data: { "Id": id },
                    cache: false,
                    dataType: "html",
                    success: function (data) {
                        $('#myModalContent').html(data);
                        $('#myModal').modal('show');
                    },
                    error: function () {
                        alert("Dynamic content load failed");
                    }
                })
            });
        });

        $(function () {
            $(".anchorDetail1").click(function () {
                var $buttonClicked = $(this);
                var id = $buttonClicked.attr('data-id');
                $.ajax({
                    type: "GET",
                    url: DetailsURL,
                    contentType: "text/html; charset=utf-8",
                    data: { "Id": id },
                    cache: false,
                    dataType: "html",
                    success: function (data) {
                        $('#myModalContent1').html(data);
                        $('#myModal1').modal('show');
                    },
                    error: function () {
                        alert("Dynamic content load failed");
                    }
                })
            });
        });

        $(function () {
            $(".anchorDetail2").click(function () {
                var $buttonClicked = $(this);
                var id = $buttonClicked.attr('data-id');
                $.ajax({
                    type: "GET",
                    url: DeleteURL,
                    contentType: "text/html; charset=utf-8",
                    data: { "Id": id },
                    cache: false,
                    dataType: "html",
                    success: function (data) {
                        $('#myModalContent2').html(data);
                        $('#myModal2').modal('show');
                    },
                    error: function () {
                        alert("Dynamic content load failed");
                    }
                })
            });
        });

        $(function () {
            $(".anchorDetail3").click(function () {
                var $buttonClicked = $(this);
                var id = $buttonClicked.attr('data-id');
                $.ajax({
                    type: "GET",
                    url: CreateURL,
                    contentType: "text/html; charset=utf-8",
                    data: { "Id": id },
                    cache: false,
                    dataType: "html",
                    success: function (data) {
                        $('#myModalContent3').html(data);
                        $('#myModal3').modal('show');
                    },
                    error: function () {
                        alert("Dynamic content load failed");
                    }
                })
            });
        });
    </script>

    <script>
        $(document).ready(function () {
            function Contains(text_one, text_two) {
                if (text_one.indexOf(text_two) != -1)
                    return true;
            }
            $("#Search").keyup(function () {
                var searchText = $("#Search").val().toLowerCase();
                $(".Search").each(function () {
                    if (!Contains($(this).text().toLowerCase(), searchText)) {
                        $(this).hide();
                    }
                    else {
                        $(this).show();
                    }
                });
            });
        });
    </script>
    <script>
        $(document).ready(function () {
            $('ul.pagination > li.disabled > a').addClass('page-link');
        });
    </script>

}




@*@model IEnumerable<OnlineFoodOrdering.Models.SubCategory>
    @using X.PagedList.Mvc.Core;
    @using X.PagedList;
    @{
        ViewData["Title"] = "Index";
        Layout = "~/Views/Shared/_Layout.cshtml";
    }
    <br />
    <br />
    <div class="container">
        <div class="row">
            <div class="col-10">
                <input type="text" id="Search" placeholder="Search" class="form-control" style="border-radius:15px;" />

            </div>
            <div class="col-2">
                <a asp-action="Create" class="site-btn"><i class="fa fa-plus"></i>  Create New</a>

            </div>
        </div>
        <br />
        <div>
            @if (Model.Count() > 0)
            {
                <table class="table">
                    <thead class="table-borderless">
                        <tr>
                            <th>
                                @Html.DisplayNameFor(model => model.Name).ToUpper()
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.Category.Name).ToUpper()
                            </th>
                            <th></th>
                            <th></th>
                        </tr>

                    </thead>
                    @foreach (var item in Model)
                    {
                        <tbody>
                            <tr class="Search">
                                <td>
                                    @Html.DisplayFor(modelItem => item.Name)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Category.Name)
                                </td>
                                <td>
                                    <partial name="_TableButtonPartial" model="item.Id" />
                                </td>
                            </tr>

                        </tbody>
                    }
                </table>
                @Html.PagedListPager((IPagedList)Model, page => Url.Action("Index", new { page = page }),
        new X.PagedList.Mvc.Core.Common.PagedListRenderOptions
        {
            DisplayItemSliceAndTotal = false,
            ContainerDivClasses = new[] { "navigation" },
            LiElementClasses = new[] { "page-item" },
            PageClasses = new[] { "page-link" },
        })

            }
            else
            {
                <p>No SubCategory Exist!</p>
            }
        </div>
    </div>
    <br />
    <br />

    @section Scripts{
        <script>
            $(document).ready(function () {
                function Contains(text_one, text_two) {
                    if (text_one.indexOf(text_two) != -1)
                        return true;
                }
                $("#Search").keyup(function () {
                    var searchText = $("#Search").val().toLowerCase();
                    $(".Search").each(function () {
                        if (!Contains($(this).text().toLowerCase(), searchText)) {
                            $(this).hide();
                        }
                        else {
                            $(this).show();
                        }
                    });
                });
            });
        </script>
        <script>
            $(document).ready(function () {
                $('ul.pagination > li.disabled > a').addClass('page-link');
            });
        </script>
    }*@